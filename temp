local icons = loadstring(game:HttpGet(('https://raw.githubusercontent.com/dawid-scripts/Fluent/master/src/Icons.lua')))()
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/5Green-RBXScripts/Roblox-Pressure-Script/main/Orion%20UI%20lib%20customized')))()

local Window = OrionLib:MakeWindow({
    Name = "Pressure Script 0.1b",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "OrionTest",
    IntroEnabled = true,
    IntroText = "5Green",
    IntroIcon = "file-code",
})

OrionLib:MakeNotification({
	Name = "Success",
	Content = "UI successfully loaded",
	Image = "rbxassetid://4483345998",
	Time = 5
})

local Tab1 = Window:MakeTab({Name = "Home", Icon = "home"})
local Tab2 = Window:MakeTab({Name = "Player", Icon = "user"})
local Tab3 = Window:MakeTab({Name = "Misc Visual", Icon = "eye"})
local Tab4 = Window:MakeTab({Name = "ESP", Icon = "rbxassetid://10734942198"})
local Tab5 = Window:MakeTab({Name = "Additional", Icon = "plus"})
local Tab6 = Window:MakeTab({Name = "Credits", Icon = "user-plus"})
local Tab7 = Window:MakeTab({Name = "Changelogs", Icon = "file-text"})
local Tab8 = Window:MakeTab({Name = "Known Issues", Icon = "shield-alert"})
local Tab9 = Window:MakeTab({Name = "Upcoming", Icon = "file-plus-2"})

Tab1:AddLabel("Read This u bitch")
Tab1:AddParagraph("Cashapp?","Support me via cashapp ig: $MapleBSOatmeal\n\nbe fuckin grateful that it's keyless so do it pussys; yall got robux to look like rebastian so pay me with real god damn money\n\nthank you :) ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥ ♥")
Tab1:AddParagraph("Bugs?", "Report any bugs to me via discord (and yes include the period): 5green.\n\n chances are I wont give a fuck abt the issues cuz im too lazy to fix them but I might so u migth as well do it")

-- Kill UI --------------------------------------------------------------------

local Section = Tab1:AddSection({
	Name = "Kill UI ⬇ ⬇ ⬇"
})

Tab1:AddButton({
	Name = "Kill UI (Does not turn off functions/cheats)",
	Callback = function()
      		OrionLib:Destroy()
  	end    
})

-- Chage Walkspeed --------------------------------------------------------------------

local Section = Tab2:AddSection({
	Name = "Walkspeed"
})

local plr = game.Players.LocalPlayer
local hum = plr.Character:FindFirstChild("Humanoid")
local walkSpeedSlider

if hum then
    hum.WalkSpeed = 16
    hum.Changed:Connect(function()
        hum.WalkSpeed = walkSpeedSlider.Value or 16
    end)
end

-- WalkSpeed Slider
walkSpeedSlider = Tab2:AddSlider({
    Name = "Walk Speed",
    Min = 0,
    Max = 100,
    Default = 16,
    Color = Color3.fromRGB(187, 255, 0),
    Increment = 1,
    ValueName = "speed",
    Callback = function(Value)
        if hum then
            hum.WalkSpeed = Value
        end
    end
})


-- Reset Walkspeed --------------------------------------------------------------------

Tab2:AddButton({
    Name = "Reset Walk Speed",
    Callback = function()
        local defaultSpeed = 16
        if hum then
            hum.WalkSpeed = defaultSpeed
        end
        walkSpeedSlider:Set(defaultSpeed)
    end
})

-- Noclip --------------------------------------------------------------------

local Section = Tab2:AddSection({
	Name = "Noclip"
})

Tab2:AddParagraph("⚠", "Noclip is postponed indefinately because of Pressure's movement functionality.\n\nIf you want it, go to my github or scroll down in the UI and look for the DEV version of the script.")

-- Air Swim --------------------------------------------------------------------

local Section = Tab2:AddSection({
	Name = "Fly Swim"
})


local swimming = false
local oldgrav = workspace.Gravity
local swimbeat = nil

Tab2:AddToggle({
    Name = "Swim",
    Default = false,
    Callback = function(Value)
        if Value then
            if not swimming and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid") then
                oldgrav = workspace.Gravity
                workspace.Gravity = 0
                local Humanoid = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid")
                local gravReset = Humanoid.Died:Connect(function()
                    workspace.Gravity = oldgrav
                    swimming = false
                    if swimbeat then
                        swimbeat:Disconnect()
                    end
                end)
                local enums = Enum.HumanoidStateType:GetEnumItems()
                table.remove(enums, table.find(enums, Enum.HumanoidStateType.None))
                for i, v in pairs(enums) do
                    Humanoid:SetStateEnabled(v, false)
                end
                Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
                swimbeat = game:GetService("RunService").Heartbeat:Connect(function()
                    pcall(function()
                        game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = ((Humanoid.MoveDirection ~= Vector3.new() or UserInputService:IsKeyDown(Enum.KeyCode.Space)) and game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity or Vector3.new())
                    end)
                end)
                swimming = true
            end
        else
            if swimming then
                workspace.Gravity = oldgrav
                swimming = false
                if swimbeat then
                    swimbeat:Disconnect()
                end
                local Humanoid = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid")
                if Humanoid then
                    local enums = Enum.HumanoidStateType:GetEnumItems()
                    for i, v in pairs(enums) do
                        Humanoid:SetStateEnabled(v, true)
                    end
                end
            end
        end
    end
})

Tab2:AddParagraph("⚠","There is no normal flight feature because it is difficult to control, unlike swimming\n\npress space to go up while swimming")

-- Fullbright --------------------------------------------------------------------

local Section = Tab3:AddSection({
	Name = "Fullbright"
})

local originalSettings = {
    Brightness = game:GetService("Lighting").Brightness,
    ClockTime = game:GetService("Lighting").ClockTime,
    FogEnd = game:GetService("Lighting").FogEnd,
    GlobalShadows = game:GetService("Lighting").GlobalShadows,
    OutdoorAmbient = game:GetService("Lighting").OutdoorAmbient
}

local function enableFullbright()
    local Lighting = game:GetService("Lighting")
    Lighting.Brightness = 2
    Lighting.ClockTime = 14
    Lighting.FogEnd = 100000
    Lighting.GlobalShadows = false
    Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
end

local function disableFullbright()
    local Lighting = game:GetService("Lighting")
    Lighting.Brightness = originalSettings.Brightness
    Lighting.ClockTime = originalSettings.ClockTime
    Lighting.FogEnd = originalSettings.FogEnd
    Lighting.GlobalShadows = originalSettings.GlobalShadows
    Lighting.OutdoorAmbient = originalSettings.OutdoorAmbient
end

Tab3:AddToggle({
    Name = "Fullbright",
    Default = false,
    Callback = function(Value)
        if Value then
            enableFullbright()
        else
            disableFullbright()
        end
    end
})

-- Change FOV --------------------------------------------------------------------

local Section = Tab3:AddSection({
	Name = "FOV"
})

local defaultFOV = 90

local function setFOV(value)
    game.Workspace.CurrentCamera.FieldOfView = value
end

fovSlider = Tab3:AddSlider({
    Name = "Field of View",
    Min = 70,
    Max = 120,
    Default = defaultFOV,
    Color = Color3.fromRGB(187, 255, 0),
    Increment = 1,
    ValueName = "FOV",
    Callback = function(Value)
        setFOV(Value)
    end
})

-- Reset FOV --------------------------------------------------------------------

Tab3:AddButton({
    Name = "Reset FOV",
    Callback = function()
        setFOV(defaultFOV)
        fovSlider:Set(defaultFOV)
    end
})

-- Player ESP --------------------------------------------------------------------

local Section = Tab4:AddSection({
	Name = "Player ESP"
})

local players = game:GetService("Players")
local runService = game:GetService("RunService")

local espEnabled = false
local espConnections = {}

local function createESP(player)
    local function onCharacterAdded(character)
        local highlight = Instance.new("Highlight")
        highlight.Parent = character
        highlight.Adornee = character
        highlight.FillColor = Color3.fromRGB(187, 255, 0)
        highlight.FillTransparency = 0.8
        highlight.OutlineColor = Color3.fromRGB(187, 255, 0)
        highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        highlight.Enabled = espEnabled

        local connection = runService.RenderStepped:Connect(function()
            if not character:IsDescendantOf(workspace) then
                highlight:Destroy()
                connection:Disconnect()
            end
        end)

        table.insert(espConnections, connection)
    end

    if player.Character then
        onCharacterAdded(player.Character)
    end

    player.CharacterAdded:Connect(onCharacterAdded)
end

local function removeESP()
    for _, connection in pairs(espConnections) do
        connection:Disconnect()
    end
    espConnections = {}

    for _, player in pairs(players:GetPlayers()) do
        if player.Character then
            local highlight = player.Character:FindFirstChildOfClass("Highlight")
            if highlight then
                highlight:Destroy()
            end
        end
    end
end

Tab4:AddToggle({
    Name = "Player ESP",
    Default = false,
    Callback = function(Value)
        espEnabled = Value
        if espEnabled then
            for _, player in pairs(players:GetPlayers()) do
                if player ~= players.LocalPlayer then
                    createESP(player)
                end
            end
            players.PlayerAdded:Connect(createESP)
        else
            removeESP()
        end
    end
})

-- Listener Function --------------------------------------------------------------------

local function setupSoundListener(callback)
    workspace.DescendantAdded:Connect(function(descendant)
        if descendant:IsA("Sound") then
            descendant.Played:Connect(function()
                if descendant.Name == "Door_Enhanced" or descendant.Name == "Door_Enhanced_2" then
                    callback()
                end
            end)
        end
    end)
end

-- Normal KeyCard ESP --------------------------------------------------------------------

local Section = Tab4:AddSection({
	Name = "Keycard ESP"
})

Tab4:AddParagraph("⚠","Don't Spam the toggles, it will just freeze the game longer after opening each door.\n\nTurning on all of the esp/spamming them won't jeapordize the gameplay fps, it will just increase the 'wait' time after opening each door")

local normalKeyCardEspEnabled = false
local normalKeyCardEspConnections = {}

local function createNormalKeyCardESP(item)
    if item:IsDescendantOf(game.Players.LocalPlayer.Character) then
        return
    end

    local nkcHighlight = Instance.new("Highlight")
    nkcHighlight.Parent = item
    nkcHighlight.Adornee = item
    nkcHighlight.FillColor = Color3.fromRGB(0, 255, 255) -- Cyan color
    nkcHighlight.OutlineColor = Color3.fromRGB(0, 255, 255)
    nkcHighlight.FillTransparency = 0.8
    nkcHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    nkcHighlight.Enabled = normalKeyCardEspEnabled

    local nkcConnection = runService.RenderStepped:Connect(function()
        if not item:IsDescendantOf(workspace) or item:IsDescendantOf(game.Players.LocalPlayer.Character) then
            nkcHighlight:Destroy()
            nkcConnection:Disconnect()
        end
    end)

    table.insert(normalKeyCardEspConnections, nkcConnection)
end

local function removeNormalKeyCardESP()
    for _, nkcConnection in pairs(normalKeyCardEspConnections) do
        nkcConnection:Disconnect()
    end
    normalKeyCardEspConnections = {}

    for _, item in pairs(workspace:GetDescendants()) do
        if item.Name == "NormalKeyCard" then
            local nkcHighlight = item:FindFirstChildOfClass("Highlight")
            if nkcHighlight then
                nkcHighlight:Destroy()
            end
        end
    end
end

-- Use the Sound Listener for NormalKeyCard ESP
Tab4:AddToggle({
    Name = "Normal KeyCard ESP",
    Default = false,
    Callback = function(Value)
        normalKeyCardEspEnabled = Value
        if normalKeyCardEspEnabled then
            for _, item in pairs(workspace:GetDescendants()) do
                if item.Name == "NormalKeyCard" then
                    createNormalKeyCardESP(item)
                end
            end
            setupSoundListener(function()
                removeNormalKeyCardESP()
                for _, item in pairs(workspace:GetDescendants()) do
                    if item.Name == "NormalKeyCard" then
                        createNormalKeyCardESP(item)
                    end
                end
            end)
        else
            removeNormalKeyCardESP()
        end
    end
})

-- Purple KeyCard ESP --------------------------------------------------------------------

local innerKeyCardEspEnabled = false
local innerKeyCardEspConnections = {}

local function createInnerKeyCardESP(item)
    if item:IsDescendantOf(game.Players.LocalPlayer.Character) then
        return
    end

    local ikcHighlight = Instance.new("Highlight")
    ikcHighlight.Parent = item
    ikcHighlight.Adornee = item
    ikcHighlight.FillColor = Color3.fromRGB(255, 0, 255) -- Purple color
    ikcHighlight.OutlineColor = Color3.fromRGB(255, 0, 255)
    ikcHighlight.FillTransparency = 0.8
    ikcHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    ikcHighlight.Enabled = innerKeyCardEspEnabled

    local ikcConnection = runService.RenderStepped:Connect(function()
        if not item:IsDescendantOf(workspace) or item:IsDescendantOf(game.Players.LocalPlayer.Character) then
            ikcHighlight:Destroy()
            ikcConnection:Disconnect()
        end
    end)

    table.insert(innerKeyCardEspConnections, ikcConnection)
end

local function removeInnerKeyCardESP()
    for _, ikcConnection in pairs(innerKeyCardEspConnections) do
        ikcConnection:Disconnect()
    end
    innerKeyCardEspConnections = {}

    for _, item in pairs(workspace:GetDescendants()) do
        if item.Name == "InnerKeyCard" then
            local ikcHighlight = item:FindFirstChildOfClass("Highlight")
            if ikcHighlight then
                ikcHighlight:Destroy()
            end
        end
    end
end

-- Use the Sound Listener for InnerKeyCard ESP
Tab4:AddToggle({
    Name = "Inner KeyCard ESP",
    Default = false,
    Callback = function(Value)
        innerKeyCardEspEnabled = Value
        if innerKeyCardEspEnabled then
            for _, item in pairs(workspace:GetDescendants()) do
                if item.Name == "InnerKeyCard" then
                    createInnerKeyCardESP(item)
                end
            end
            setupSoundListener(function()
                removeInnerKeyCardESP()
                for _, item in pairs(workspace:GetDescendants()) do
                    if item.Name == "InnerKeyCard" then
                        createInnerKeyCardESP(item)
                    end
                end
            end)
        else
            removeInnerKeyCardESP()
        end
    end
})

-- Orange KeyCard ESP --------------------------------------------------------------------

local ridgeKeyCardEspEnabled = false
local ridgeKeyCardEspConnections = {}

local function createRidgeKeyCardESP(item)
    if item:IsDescendantOf(game.Players.LocalPlayer.Character) then
        return
    end

    local rkcHighlight = Instance.new("Highlight")
    rkcHighlight.Parent = item
    rkcHighlight.Adornee = item
    rkcHighlight.FillColor = Color3.fromRGB(255, 255, 0) -- Purple color
    rkcHighlight.OutlineColor = Color3.fromRGB(255, 255, 0)
    rkcHighlight.FillTransparency = 0.8
    rkcHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    rkcHighlight.Enabled = ridgeKeyCardEspEnabled

    local rkcConnection = runService.RenderStepped:Connect(function()
        if not item:IsDescendantOf(workspace) or item:IsDescendantOf(game.Players.LocalPlayer.Character) then
            rkcHighlight:Destroy()
            rkcConnection:Disconnect()
        end
    end)

    table.insert(ridgeKeyCardEspConnections, rkcConnection)
end

local function removeRidgeKeyCardESP()
    for _, rkcConnection in pairs(ridgeKeyCardEspConnections) do
        rkcConnection:Disconnect()
    end
    ridgeKeyCardEspConnections = {}

    for _, item in pairs(workspace:GetDescendants()) do
        if item.Name == "RidgeKeyCard" then
            local rkcHighlight = item:FindFirstChildOfClass("Highlight")
            if rkcHighlight then
                rkcHighlight:Destroy()
            end
        end
    end
end

-- Use the Sound Listener for RidgeKeyCard ESP
Tab4:AddToggle({
    Name = "Ridge KeyCard ESP",
    Default = false,
    Callback = function(Value)
        ridgeKeyCardEspEnabled = Value
        if ridgeKeyCardEspEnabled then
            for _, item in pairs(workspace:GetDescendants()) do
                if item.Name == "RidgeKeyCard" then
                    createRidgeKeyCardESP(item)
                end
            end
            setupSoundListener(function()
                removeRidgeKeyCardESP()
                for _, item in pairs(workspace:GetDescendants()) do
                    if item.Name == "RidgeKeyCard" then
                        createRidgeKeyCardESP(item)
                    end
                end
            end)
        else
            removeRidgeKeyCardESP()
        end
    end
})

-- Door ESP --------------------------------------------------------------------

local Section = Tab4:AddSection({
	Name = "Door ESP"
})

local doorEspEnabled = false
local doorEspConnections = {}

local function createDoorESP(item)
    if item:IsDescendantOf(game.Players.LocalPlayer.Character) then
        return
    end

    local doorHighlight = Instance.new("Highlight")
    doorHighlight.Parent = item
    doorHighlight.Adornee = item
    doorHighlight.FillColor = Color3.fromRGB(255, 255, 255) -- White color
    doorHighlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    doorHighlight.FillTransparency = 0.8
    doorHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    doorHighlight.Enabled = doorEspEnabled

    local doorConnection = runService.RenderStepped:Connect(function()
        if not item:IsDescendantOf(workspace) or item:IsDescendantOf(game.Players.LocalPlayer.Character) then
            doorHighlight:Destroy()
            doorConnection:Disconnect()
        end
    end)

    table.insert(doorEspConnections, doorConnection)
end

local function removeDoorESP()
    for _, doorConnection in pairs(doorEspConnections) do
        doorConnection:Disconnect()
    end
    doorEspConnections = {}

    for _, item in pairs(workspace:GetDescendants()) do
        if item:IsA("Model") and item.Name == "Door" and item:FindFirstChild("Door1") then
            local doorHighlight = item:FindFirstChildOfClass("Highlight")
            if doorHighlight then
                doorHighlight:Destroy()
            end
        end
    end
end

-- Use the Sound Listener for Door ESP
Tab4:AddToggle({
    Name = "Door ESP",
    Default = false,
    Callback = function(Value)
        doorEspEnabled = Value
        if doorEspEnabled then
            for _, item in pairs(workspace:GetDescendants()) do
                if item:IsA("Model") and item.Name == "Door" and item:FindFirstChild("Door1") then
                    createDoorESP(item)
                end
            end
            setupSoundListener(function()
                removeDoorESP()
                for _, item in pairs(workspace:GetDescendants()) do
                    if item:IsA("Model") and item.Name == "Door" and item:FindFirstChild("Door1") then
                        createDoorESP(item)
                    end
                end
            end)
        else
            removeDoorESP()
        end
    end
})

-- ItemLocker ESP --------------------------------------------------------------------

lua
Copy code
-- Item Locker ESP with Sound Listener ------------------------------------------------------

local itemLockerEspEnabled = false
local itemLockerEspConnections = {}

local function createItemLockerESP(item)
    if item:IsDescendantOf(game.Players.LocalPlayer.Character) then
        return
    end

    local lockerHighlight = Instance.new("Highlight")
    lockerHighlight.Parent = item
    lockerHighlight.Adornee = item
    lockerHighlight.FillColor = Color3.fromRGB(169, 169, 169) -- Light gray color
    lockerHighlight.OutlineColor = Color3.fromRGB(169, 169, 169)
    lockerHighlight.FillTransparency = 0.8
    lockerHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    lockerHighlight.Enabled = itemLockerEspEnabled

    local lockerConnection = runService.RenderStepped:Connect(function()
        if not item:IsDescendantOf(workspace) or item:IsDescendantOf(game.Players.LocalPlayer.Character) then
            lockerHighlight:Destroy()
            lockerConnection:Disconnect()
        end
    end)

    table.insert(itemLockerEspConnections, lockerConnection)
end

local function removeItemLockerESP()
    for _, lockerConnection in pairs(itemLockerEspConnections) do
        lockerConnection:Disconnect()
    end
    itemLockerEspConnections = {}

    for _, item in pairs(workspace:GetDescendants()) do
        if item.Name == "ItemLocker" then
            local lockerHighlight = item:FindFirstChildOfClass("Highlight")
            if lockerHighlight then
                lockerHighlight:Destroy()
            end
        end
    end
end

-- Use the Sound Listener for Item Locker ESP
Tab4:AddToggle({
    Name = "Item Locker ESP",
    Default = false,
    Callback = function(Value)
        itemLockerEspEnabled = Value
        if itemLockerEspEnabled then
            for _, item in pairs(workspace:GetDescendants()) do
                if item.Name == "ItemLocker" then
                    createItemLockerESP(item)
                end
            end
            setupSoundListener(function()
                removeItemLockerESP()
                for _, item in pairs(workspace:GetDescendants()) do
                    if item.Name == "ItemLocker" then
                        createItemLockerESP(item)
                    end
                end
            end)
        else
            removeItemLockerESP()
        end
    end
})
-- MonsterLocker ESP -------------------------------------------------------------------

local Section = Tab4:AddSection({
	Name = "Void Locker ESP"
})

local monsterLockerEspEnabled = false
local monsterLockerEspConnections = {}

local function createMonsterLockerESP(item)
    if item:IsDescendantOf(game.Players.LocalPlayer.Character) then
        return
    end

    local lockerHighlight = Instance.new("Highlight")
    lockerHighlight.Parent = item
    lockerHighlight.Adornee = item
    lockerHighlight.FillColor = Color3.fromRGB(128, 0, 128) -- Purple color
    lockerHighlight.OutlineColor = Color3.fromRGB(128, 0, 128)
    lockerHighlight.FillTransparency = 0.8
    lockerHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    lockerHighlight.Enabled = monsterLockerEspEnabled

    local lockerConnection = runService.RenderStepped:Connect(function()
        if not item:IsDescendantOf(workspace) or item:IsDescendantOf(game.Players.LocalPlayer.Character) then
            lockerHighlight:Destroy()
            lockerConnection:Disconnect()
        end
    end)

    table.insert(monsterLockerEspConnections, lockerConnection)
end

local function removeMonsterLockerESP()
    for _, lockerConnection in pairs(monsterLockerEspConnections) do
        lockerConnection:Disconnect()
    end
    monsterLockerEspConnections = {}

    for _, item in pairs(workspace:GetDescendants()) do
        if item.Name == "MonsterLocker" then
            local lockerHighlight = item:FindFirstChildOfClass("Highlight")
            if lockerHighlight then
                lockerHighlight:Destroy()
            end
        end
    end
end

-- Use the Sound Listener for Monster Locker ESP
Tab4:AddToggle({
    Name = "Monster Locker ESP",
    Default = false,
    Callback = function(Value)
        monsterLockerEspEnabled = Value
        if monsterLockerEspEnabled then
            for _, item in pairs(workspace:GetDescendants()) do
                if item.Name == "MonsterLocker" then
                    createMonsterLockerESP(item)
                end
            end
            setupSoundListener(function()
                removeMonsterLockerESP()
                for _, item in pairs(workspace:GetDescendants()) do
                    if item.Name == "MonsterLocker" then
                        createMonsterLockerESP(item)
                    end
                end
            end)
        else
            removeMonsterLockerESP()
        end
    end
})
-- Currency ESP -------------------------------------------------------------------

local Section = Tab4:AddSection({
	Name = "Money ESP"
})

Tab4:AddParagraph("⚠", "Currency ESP is postponed indefinately because it causes a lot of lag.\n\nIf you want it, go to my github or scroll down in the UI and look for the DEV version of the script.")

--[[

local currencyEspEnabled = false
local currencyEspConnections = {}

local function createCurrencyESP(item)
    if item:IsDescendantOf(game.Players.LocalPlayer.Character) then
        return
    end

    local currencyHighlight = Instance.new("Highlight")
    currencyHighlight.Parent = item
    currencyHighlight.Adornee = item
    currencyHighlight.FillColor = Color3.fromRGB(0, 100, 0) -- Dark green color
    currencyHighlight.OutlineColor = Color3.fromRGB(0, 100, 0)
    currencyHighlight.FillTransparency = 0.8
    currencyHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    currencyHighlight.Enabled = currencyEspEnabled

    local currencyConnection = runService.RenderStepped:Connect(function()
        if not item:IsDescendantOf(workspace) or item:IsDescendantOf(game.Players.LocalPlayer.Character) then
            currencyHighlight:Destroy()
            currencyConnection:Disconnect()
        end
    end)

    table.insert(currencyEspConnections, currencyConnection)
end

local function removeCurrencyESP()
    for _, currencyConnection in pairs(currencyEspConnections) do
        currencyConnection:Disconnect()
    end
    currencyEspConnections = {}

    for _, item in pairs(workspace:GetDescendants()) do
        if item.Name == "5Currency" or item.Name == "10Currency" or item.Name == "15Currency" then
            local currencyHighlight = item:FindFirstChildOfClass("Highlight")
            if currencyHighlight then
                currencyHighlight:Destroy()
            end
        end
    end
end

-- Use the Sound Listener for Currency ESP
Tab4:AddToggle({
    Name = "Currency ESP",
    Default = false,
    Callback = function(Value)
        currencyEspEnabled = Value
        if currencyEspEnabled then
            for _, item in pairs(workspace:GetDescendants()) do
                if item.Name == "5Currency" or item.Name == "10Currency" or item.Name == "15Currency" then
                    createCurrencyESP(item)
                end
            end
            setupSoundListener(function()
                removeCurrencyESP()
                for _, item in pairs(workspace:GetDescendants()) do
                    if item.Name == "5Currency" or item.Name == "10Currency" or item.Name == "15Currency" then
                        createCurrencyESP(item)
                    end
                end
            end)
        else
            removeCurrencyESP()
        end
    end
})

--]]

-- Item ESP --------------------------------------------------------------------

local Section = Tab4:AddSection({
	Name = "Item ESP"
})

Tab4:AddParagraph("⚠", "The more shit you turn on, the longer the game freezes after opening each door.\n\nFreeze time increases as you progress further.")

-- Battery ESP --------------------------------------------------------------------

local batteryEspEnabled = false
local batteryEspConnections = {}

local function createBatteryESP(item)
    if item:IsDescendantOf(game.Players.LocalPlayer.Character) then
        return
    end

    local batteryHighlight = Instance.new("Highlight")
    batteryHighlight.Parent = item
    batteryHighlight.Adornee = item
    batteryHighlight.FillColor = Color3.fromRGB(255, 165, 0) -- Orange color
    batteryHighlight.OutlineColor = Color3.fromRGB(255, 165, 0)
    batteryHighlight.FillTransparency = 0.8
    batteryHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    batteryHighlight.Enabled = batteryEspEnabled


    local batteryConnection = runService.RenderStepped:Connect(function()
        if not item:IsDescendantOf(workspace) or item:IsDescendantOf(game.Players.LocalPlayer.Character) then
            batteryHighlight:Destroy()
            batteryConnection:Disconnect()
        end
    end)

    table.insert(batteryEspConnections, batteryConnection)
end

local function removeBatteryESP()
    for _, batteryConnection in pairs(batteryEspConnections) do
        batteryConnection:Disconnect()
    end
    batteryEspConnections = {}

    for _, item in pairs(workspace:GetDescendants()) do
        if item:IsA("Model") and (item.Name == "AltBattery1" or item.Name == "AltBattery2" or item.Name == "AltBattery3" or item.Name == "DefaultBattery1" or item.Name == "DefaultBattery2" or item.Name == "DefaultBattery3" or item.Name == "RoomsBattery") then
            local batteryHighlight = item:FindFirstChildOfClass("Highlight")
            if batteryHighlight then
                batteryHighlight:Destroy()
            end
        end
    end
end

-- Use the Sound Listener for Battery ESP
Tab4:AddToggle({
    Name = "Battery",
    Default = false,
    Callback = function(Value)
        batteryEspEnabled = Value
        if batteryEspEnabled then
            for _, item in pairs(workspace:GetDescendants()) do
                if item:IsA("Model") and (item.Name == "AltBattery1" or item.Name == "AltBattery2" or item.Name == "AltBattery3" or item.Name == "DefaultBattery1" or item.Name == "DefaultBattery2" or item.Name == "DefaultBattery3" or item.Name == "RoomsBattery") then
                    createBatteryESP(item)
                end
            end
            setupSoundListener(function()
                removeBatteryESP()
                for _, item in pairs(workspace:GetDescendants()) do
                    if item:IsA("Model") and (item.Name == "AltBattery1" or item.Name == "AltBattery2" or item.Name == "AltBattery3" or item.Name == "DefaultBattery1" or item.Name == "DefaultBattery2" or item.Name == "DefaultBattery3" or item.Name == "RoomsBattery") then
                        createBatteryESP(item)
                    end
                end
            end)
        else
            removeBatteryESP()
        end
    end
})

-- Blacklight ESP --------------------------------------------------------------------

local blacklightEspEnabled = false
local blacklightEspConnections = {}

local function createBlacklightESP(item)
    if item:IsDescendantOf(game.Players.LocalPlayer.Character) then
        return
    end

    local blacklightHighlight = Instance.new("Highlight")
    blacklightHighlight.Parent = item
    blacklightHighlight.Adornee = item
    blacklightHighlight.FillColor = Color3.fromRGB(75, 0, 130) -- Purple color
    blacklightHighlight.OutlineColor = Color3.fromRGB(75, 0, 130)
    blacklightHighlight.FillTransparency = 0.8
    blacklightHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    blacklightHighlight.Enabled = blacklightEspEnabled

    local blacklightConnection = runService.RenderStepped:Connect(function()
        if not item:IsDescendantOf(workspace) or item:IsDescendantOf(game.Players.LocalPlayer.Character) then
            blacklightHighlight:Destroy()
            blacklightConnection:Disconnect()
        end
    end)

    table.insert(blacklightEspConnections, blacklightConnection)
end

local function removeBlacklightESP()
    for _, blacklightConnection in pairs(blacklightEspConnections) do
        blacklightConnection:Disconnect()
    end
    blacklightEspConnections = {}

    for _, item in pairs(workspace:GetDescendants()) do
        if item.Name == "Blacklight" then
            local blacklightHighlight = item:FindFirstChildOfClass("Highlight")
            if blacklightHighlight then
                blacklightHighlight:Destroy()
            end
        end
    end
end

-- Use the Sound Listener for Blacklight ESP
Tab4:AddToggle({
    Name = "Blacklight ESP",
    Default = false,
    Callback = function(Value)
        blacklightEspEnabled = Value
        if blacklightEspEnabled then
            for _, item in pairs(workspace:GetDescendants()) do
                if item.Name == "Blacklight" then
                    createBlacklightESP(item)
                end
            end
            setupSoundListener(function()
                removeBlacklightESP()
                for _, item in pairs(workspace:GetDescendants()) do
                    if item.Name == "Blacklight" then
                        createBlacklightESP(item)
                    end
                end
            end)
        else
            removeBlacklightESP()
        end
    end
})

-- Necrobloxicon ESP --------------------------------------------------------------------

local bookEspEnabled = false
local bookEspConnections = {}

local function createBookESP(item)
    if item:IsDescendantOf(game.Players.LocalPlayer.Character) then
        return
    end

    local bookHighlight = Instance.new("Highlight")
    bookHighlight.Parent = item
    bookHighlight.Adornee = item
    bookHighlight.FillColor = Color3.fromRGB(165, 0, 0) -- Dark red color
    bookHighlight.OutlineColor = Color3.fromRGB(165, 0, 0)
    bookHighlight.FillTransparency = 0.8
    bookHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    bookHighlight.Enabled = bookEspEnabled

    local bookConnection = runService.RenderStepped:Connect(function()
        if not item:IsDescendantOf(workspace) or item:IsDescendantOf(game.Players.LocalPlayer.Character) then
            bookHighlight:Destroy()
            bookConnection:Disconnect()
        end
    end)

    table.insert(bookEspConnections, bookConnection)
end

local function removeBookESP()
    for _, bookConnection in pairs(bookEspConnections) do
        bookConnection:Disconnect()
    end
    bookEspConnections = {}

    for _, item in pairs(workspace:GetDescendants()) do
        if item.Name == "Book" then
            local bookHighlight = item:FindFirstChildOfClass("Highlight")
            if bookHighlight then
                bookHighlight:Destroy()
            end
        end
    end
end

-- Use the Sound Listener for Book ESP
Tab4:AddToggle({
    Name = "Book ESP",
    Default = false,
    Callback = function(Value)
        bookEspEnabled = Value
        if bookEspEnabled then
            for _, item in pairs(workspace:GetDescendants()) do
                if item.Name == "Book" then
                    createBookESP(item)
                end
            end
            setupSoundListener(function()
                removeBookESP()
                for _, item in pairs(workspace:GetDescendants()) do
                    if item.Name == "Book" then
                        createBookESP(item)
                    end
                end
            end)
        else
            removeBookESP()
        end
    end
})

-- CodeBreacher ESP --------------------------------------------------------------------

local codeBreacherEspEnabled = false
local codeBreacherEspConnections = {}

local function createCodeBreacherESP(item)
    if item:IsDescendantOf(game.Players.LocalPlayer.Character) then
        return
    end

    local codeBreacherHighlight = Instance.new("Highlight")
    codeBreacherHighlight.Parent = item
    codeBreacherHighlight.Adornee = item
    codeBreacherHighlight.FillColor = Color3.fromRGB(139, 0, 0) -- (less) Dark red color
    codeBreacherHighlight.OutlineColor = Color3.fromRGB(165, 0, 0)
    codeBreacherHighlight.FillTransparency = 0.8
    codeBreacherHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    codeBreacherHighlight.Enabled = codeBreacherEspEnabled

    local codeBreacherConnection = runService.RenderStepped:Connect(function()
        if not item:IsDescendantOf(workspace) or item:IsDescendantOf(game.Players.LocalPlayer.Character) then
            codeBreacherHighlight:Destroy()
            codeBreacherConnection:Disconnect()
        end
    end)

    table.insert(codeBreacherEspConnections, codeBreacherConnection)
end

local function removeCodeBreacherESP()
    for _, codeBreacherConnection in pairs(codeBreacherEspConnections) do
        codeBreacherConnection:Disconnect()
    end
    codeBreacherEspConnections = {}

    for _, item in pairs(workspace:GetDescendants()) do
        if item.Name == "CodeBreacher" then
            local codeBreacherHighlight = item:FindFirstChildOfClass("Highlight")
            if codeBreacherHighlight then
                codeBreacherHighlight:Destroy()
            end
        end
    end
end

-- Use the Sound Listener for CodeBreacher ESP
Tab4:AddToggle({
    Name = "CodeBreacher ESP",
    Default = false,
    Callback = function(Value)
        codeBreacherEspEnabled = Value
        if codeBreacherEspEnabled then
            for _, item in pairs(workspace:GetDescendants()) do
                if item.Name == "CodeBreacher" then
                    createCodeBreacherESP(item)
                end
            end
            setupSoundListener(function()
                removeCodeBreacherESP()
                for _, item in pairs(workspace:GetDescendants()) do
                    if item.Name == "CodeBreacher" then
                        createCodeBreacherESP(item)
                    end
                end
            end)
        else
            removeCodeBreacherESP()
        end
    end
})

-- DwellerPiece ESP --------------------------------------------------------------------

local dwellerPieceEspEnabled = false
local dwellerPieceEspConnections = {}

local function createDwellerPieceESP(item)
    if item:IsDescendantOf(game.Players.LocalPlayer.Character) then
        return
    end

    local dwellerPieceHighlight = Instance.new("Highlight")
    dwellerPieceHighlight.Parent = item
    dwellerPieceHighlight.Adornee = item
    dwellerPieceHighlight.FillColor = Color3.fromRGB(253, 255, 177) -- Beige color
    dwellerPieceHighlight.OutlineColor = Color3.fromRGB(253, 255, 177)
    dwellerPieceHighlight.FillTransparency = 0.8
    dwellerPieceHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    dwellerPieceHighlight.Enabled = dwellerPieceEspEnabled

    local dwellerPieceConnection = runService.RenderStepped:Connect(function()
        if not item:IsDescendantOf(workspace) or item:IsDescendantOf(game.Players.LocalPlayer.Character) then
            dwellerPieceHighlight:Destroy()
            dwellerPieceConnection:Disconnect()
        end
    end)

    table.insert(dwellerPieceEspConnections, dwellerPieceConnection)
end

local function removeDwellerPieceESP()
    for _, dwellerPieceConnection in pairs(dwellerPieceEspConnections) do
        dwellerPieceConnection:Disconnect()
    end
    dwellerPieceEspConnections = {}

    for _, item in pairs(workspace:GetDescendants()) do
        if item.Name == "DwellerPiece" then
            local dwellerPieceHighlight = item:FindFirstChildOfClass("Highlight")
            if dwellerPieceHighlight then
                dwellerPieceHighlight:Destroy()
            end
        end
    end
end

-- Use the Sound Listener for DwellerPiece ESP
Tab4:AddToggle({
    Name = "DwellerPiece ESP",
    Default = false,
    Callback = function(Value)
        dwellerPieceEspEnabled = Value
        if dwellerPieceEspEnabled then
            for _, item in pairs(workspace:GetDescendants()) do
                if item.Name == "DwellerPiece" then
                    createDwellerPieceESP(item)
                end
            end
            setupSoundListener(function()
                removeDwellerPieceESP()
                for _, item in pairs(workspace:GetDescendants()) do
                    if item.Name == "DwellerPiece" then
                        createDwellerPieceESP(item)
                    end
                end
            end)
        else
            removeDwellerPieceESP()
        end
    end
})

-- FlashBeacon ESP --------------------------------------------------------------------

local flashBeaconEspEnabled = false
local flashBeaconEspConnections = {}

local function createFlashBeaconESP(item)
    if item:IsDescendantOf(game.Players.LocalPlayer.Character) then
        return
    end

    local flashBeaconHighlight = Instance.new("Highlight")
    flashBeaconHighlight.Parent = item
    flashBeaconHighlight.Adornee = item
    flashBeaconHighlight.FillColor = Color3.fromRGB(255, 90, 0) -- Orange-yellow color
    flashBeaconHighlight.OutlineColor = Color3.fromRGB(255, 90, 0)
    flashBeaconHighlight.FillTransparency = 0.8
    flashBeaconHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    flashBeaconHighlight.Enabled = flashBeaconEspEnabled

    local flashBeaconConnection = runService.RenderStepped:Connect(function()
        if not item:IsDescendantOf(workspace) or item:IsDescendantOf(game.Players.LocalPlayer.Character) then
            flashBeaconHighlight:Destroy()
            flashBeaconConnection:Disconnect()
        end
    end)

    table.insert(flashBeaconEspConnections, flashBeaconConnection)
end

local function removeFlashBeaconESP()
    for _, flashBeaconConnection in pairs(flashBeaconEspConnections) do
        flashBeaconConnection:Disconnect()
    end
    flashBeaconEspConnections = {}

    for _, item in pairs(workspace:GetDescendants()) do
        if item.Name == "FlashBeacon" then
            local flashBeaconHighlight = item:FindFirstChildOfClass("Highlight")
            if flashBeaconHighlight then
                flashBeaconHighlight:Destroy()
            end
        end
    end
end

-- Use the Sound Listener for FlashBeacon ESP
Tab4:AddToggle({
    Name = "FlashBeacon ESP",
    Default = false,
    Callback = function(Value)
        flashBeaconEspEnabled = Value
        if flashBeaconEspEnabled then
            for _, item in pairs(workspace:GetDescendants()) do
                if item.Name == "FlashBeacon" then
                    createFlashBeaconESP(item)
                end
            end
            setupSoundListener(function()
                removeFlashBeaconESP()
                for _, item in pairs(workspace:GetDescendants()) do
                    if item.Name == "FlashBeacon" then
                        createFlashBeaconESP(item)
                    end
                end
            end)
        else
            removeFlashBeaconESP()
        end
    end
})
-- FlashLight ESP --------------------------------------------------------------------

local flashlightEspEnabled = false
local flashlightEspConnections = {}

local function createFlashlightESP(item)
    if item:IsDescendantOf(game.Players.LocalPlayer.Character) then
        return
    end

    local flashlightHighlight = Instance.new("Highlight")
    flashlightHighlight.Parent = item
    flashlightHighlight.Adornee = item
    flashlightHighlight.FillColor = Color3.fromRGB(255, 230, 0) -- Yellow color
    flashlightHighlight.OutlineColor = Color3.fromRGB(255, 230, 0)
    flashlightHighlight.FillTransparency = 0.8
    flashlightHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    flashlightHighlight.Enabled = flashlightEspEnabled

    local flashlightConnection = runService.RenderStepped:Connect(function()
        if not item:IsDescendantOf(workspace) or item:IsDescendantOf(game.Players.LocalPlayer.Character) then
            flashlightHighlight:Destroy()
            flashlightConnection:Disconnect()
        end
    end)

    table.insert(flashlightEspConnections, flashlightConnection)
end

local function removeFlashlightESP()
    for _, flashlightConnection in pairs(flashlightEspConnections) do
        flashlightConnection:Disconnect()
    end
    flashlightEspConnections = {}

    for _, item in pairs(workspace:GetDescendants()) do
        if item.Name == "Flashlight" then
            local flashlightHighlight = item:FindFirstChildOfClass("Highlight")
            if flashlightHighlight then
                flashlightHighlight:Destroy()
            end
        end
    end
end

-- Use the Sound Listener for Flashlight ESP
Tab4:AddToggle({
    Name = "Flashlight ESP",
    Default = false,
    Callback = function(Value)
        flashlightEspEnabled = Value
        if flashlightEspEnabled then
            for _, item in pairs(workspace:GetDescendants()) do
                if item.Name == "Flashlight" then
                    createFlashlightESP(item)
                end
            end
            setupSoundListener(function()
                removeFlashlightESP()
                for _, item in pairs(workspace:GetDescendants()) do
                    if item.Name == "Flashlight" then
                        createFlashlightESP(item)
                    end
                end
            end)
        else
            removeFlashlightESP()
        end
    end
})

-- Gummylight ESP --------------------------------------------------------------------

local gummylightEspEnabled = false
local gummylightEspConnections = {}

local function createGummylightESP(item)
    if item:IsDescendantOf(game.Players.LocalPlayer.Character) then
        return
    end

    local gummylightHighlight = Instance.new("Highlight")
    gummylightHighlight.Parent = item
    gummylightHighlight.Adornee = item
    gummylightHighlight.FillColor = Color3.fromRGB(142, 255, 176) -- Green color
    gummylightHighlight.OutlineColor = Color3.fromRGB(142, 255, 176)
    gummylightHighlight.FillTransparency = 0.8
    gummylightHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    gummylightHighlight.Enabled = gummylightEspEnabled

    local gummylightConnection = runService.RenderStepped:Connect(function()
        if not item:IsDescendantOf(workspace) or item:IsDescendantOf(game.Players.LocalPlayer.Character) then
            gummylightHighlight:Destroy()
            gummylightConnection:Disconnect()
        end
    end)

    table.insert(gummylightEspConnections, gummylightConnection)
end

local function removeGummylightESP()
    for _, gummylightConnection in pairs(gummylightEspConnections) do
        gummylightConnection:Disconnect()
    end
    gummylightEspConnections = {}

    for _, item in pairs(workspace:GetDescendants()) do
        if item.Name == "Gummylight" then
            local gummylightHighlight = item:FindFirstChildOfClass("Highlight")
            if gummylightHighlight then
                gummylightHighlight:Destroy()
            end
        end
    end
end

-- Use the Sound Listener for Gummylight ESP
Tab4:AddToggle({
    Name = "Gummylight ESP",
    Default = false,
    Callback = function(Value)
        gummylightEspEnabled = Value
        if gummylightEspEnabled then
            for _, item in pairs(workspace:GetDescendants()) do
                if item.Name == "Gummylight" then
                    createGummylightESP(item)
                end
            end
            setupSoundListener(function()
                removeGummylightESP()
                for _, item in pairs(workspace:GetDescendants()) do
                    if item.Name == "Gummylight" then
                        createGummylightESP(item)
                    end
                end
            end)
        else
            removeGummylightESP()
        end
    end
})

-- Lantern ESP --------------------------------------------------------------------

local lanternEspEnabled = false
local lanternEspConnections = {}

local function createLanternESP(item)
    if item:IsDescendantOf(game.Players.LocalPlayer.Character) then
        return
    end

    local lanternHighlight = Instance.new("Highlight")
    lanternHighlight.Parent = item
    lanternHighlight.Adornee = item
    lanternHighlight.FillColor = Color3.fromRGB(255, 255, 0) -- Orange color
    lanternHighlight.OutlineColor = Color3.fromRGB(255, 255, 0)
    lanternHighlight.FillTransparency = 0.8
    lanternHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    lanternHighlight.Enabled = lanternEspEnabled

    local lanternConnection = runService.RenderStepped:Connect(function()
        if not item:IsDescendantOf(workspace) or item:IsDescendantOf(game.Players.LocalPlayer.Character) then
            lanternHighlight:Destroy()
            lanternConnection:Disconnect()
        end
    end)

    table.insert(lanternEspConnections, lanternConnection)
end

local function removeLanternESP()
    for _, lanternConnection in pairs(lanternEspConnections) do
        lanternConnection:Disconnect()
    end
    lanternEspConnections = {}

    for _, item in pairs(workspace:GetDescendants()) do
        if item.Name == "Lantern" then
            local lanternHighlight = item:FindFirstChildOfClass("Highlight")
            if lanternHighlight then
                lanternHighlight:Destroy()
            end
        end
    end
end

-- Use the Sound Listener for Lantern ESP
Tab4:AddToggle({
    Name = "Lantern ESP",
    Default = false,
    Callback = function(Value)
        lanternEspEnabled = Value
        if lanternEspEnabled then
            for _, item in pairs(workspace:GetDescendants()) do
                if item.Name == "Lantern" then
                    createLanternESP(item)
                end
            end
            setupSoundListener(function()
                removeLanternESP()
                for _, item in pairs(workspace:GetDescendants()) do
                    if item.Name == "Lantern" then
                        createLanternESP(item)
                    end
                end
            end)
        else
            removeLanternESP()
        end
    end
})

-- Medkit ESP --------------------------------------------------------------------

local medkitEspEnabled = false
local medkitEspConnections = {}

local function createMedkitESP(item)
    if item:IsDescendantOf(game.Players.LocalPlayer.Character) then
        return
    end

    local medkitHighlight = Instance.new("Highlight")
    medkitHighlight.Parent = item
    medkitHighlight.Adornee = item
    medkitHighlight.FillColor = Color3.fromRGB(185, 255, 185) -- Mint color
    medkitHighlight.OutlineColor = Color3.fromRGB(185, 255, 185)
    medkitHighlight.FillTransparency = 0.8
    medkitHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    medkitHighlight.Enabled = medkitEspEnabled

    local medkitConnection = runService.RenderStepped:Connect(function()
        if not item:IsDescendantOf(workspace) or item:IsDescendantOf(game.Players.LocalPlayer.Character) then
            medkitHighlight:Destroy()
            medkitConnection:Disconnect()
        end
    end)

    table.insert(medkitEspConnections, medkitConnection)
end

local function removeMedkitESP()
    for _, medkitConnection in pairs(medkitEspConnections) do
        medkitConnection:Disconnect()
    end
    medkitEspConnections = {}

    for _, item in pairs(workspace:GetDescendants()) do
        if item.Name == "Medkit" then
            local medkitHighlight = item:FindFirstChildOfClass("Highlight")
            if medkitHighlight then
                medkitHighlight:Destroy()
            end
        end
    end
end

-- Use the Sound Listener for Medkit ESP
Tab4:AddToggle({
    Name = "Medkit ESP",
    Default = false,
    Callback = function(Value)
        medkitEspEnabled = Value
        if medkitEspEnabled then
            for _, item in pairs(workspace:GetDescendants()) do
                if item.Name == "Medkit" then
                    createMedkitESP(item)
                end
            end
            setupSoundListener(function()
                removeMedkitESP()
                for _, item in pairs(workspace:GetDescendants()) do
                    if item.Name == "Medkit" then
                        createMedkitESP(item)
                    end
                end
            end)
        else
            removeMedkitESP()
        end
    end
})

-- WindupLight ESP --------------------------------------------------------------------

local windupLightEspEnabled = false
local windupLightEspConnections = {}

local function createWindupLightESP(item)
    if item:IsDescendantOf(game.Players.LocalPlayer.Character) then
        return
    end

    local windupLightHighlight = Instance.new("Highlight")
    windupLightHighlight.Parent = item
    windupLightHighlight.Adornee = item
    windupLightHighlight.FillColor = Color3.fromRGB(242, 133, 0) -- Tangerine color
    windupLightHighlight.OutlineColor = Color3.fromRGB(242, 133, 0)
    windupLightHighlight.FillTransparency = 0.8
    windupLightHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    windupLightHighlight.Enabled = windupLightEspEnabled

    local windupLightConnection = runService.RenderStepped:Connect(function()
        if not item:IsDescendantOf(workspace) or item:IsDescendantOf(game.Players.LocalPlayer.Character) then
            windupLightHighlight:Destroy()
            windupLightConnection:Disconnect()
        end
    end)

    table.insert(windupLightEspConnections, windupLightConnection)
end

local function removeWindupLightESP()
    for _, windupLightConnection in pairs(windupLightEspConnections) do
        windupLightConnection:Disconnect()
    end
    windupLightEspConnections = {}

    for _, item in pairs(workspace:GetDescendants()) do
        if item.Name == "WindupLight" then
            local windupLightHighlight = item:FindFirstChildOfClass("Highlight")
            if windupLightHighlight then
                windupLightHighlight:Destroy()
            end
        end
    end
end

Tab4:AddToggle({
    Name = "Hand-Cranked Flashlight",
    Default = false,
    Callback = function(Value)
        windupLightEspEnabled = Value
        if windupLightEspEnabled then
            for _, item in pairs(workspace:GetDescendants()) do
                if item.Name == "WindupLight" then
                    createWindupLightESP(item)
                end
            end
            setupSoundListener(function()
                removeWindupLightESP()
                for _, item in pairs(workspace:GetDescendants()) do
                    if item.Name == "WindupLight" then
                        createWindupLightESP(item)
                    end
                end
            end)
        else
            removeWindupLightESP()
        end
    end
})

-- ToyRemote ESP --------------------------------------------------------------------

local toyRemoteEspEnabled = false
local toyRemoteEspConnections = {}

local function createToyRemoteESP(item)
    if item:IsDescendantOf(game.Players.LocalPlayer.Character) then
        return
    end

    local toyRemoteHighlight = Instance.new("Highlight")
    toyRemoteHighlight.Parent = item
    toyRemoteHighlight.Adornee = item
    toyRemoteHighlight.FillColor = Color3.fromRGB(255, 0, 0) -- Red color
    toyRemoteHighlight.OutlineColor = Color3.fromRGB(255, 0, 0)
    toyRemoteHighlight.FillTransparency = 0.8
    toyRemoteHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    toyRemoteHighlight.Enabled = toyRemoteEspEnabled

    local toyRemoteConnection = runService.RenderStepped:Connect(function()
        if not item:IsDescendantOf(workspace) or item:IsDescendantOf(game.Players.LocalPlayer.Character) then
            toyRemoteHighlight:Destroy()
            toyRemoteConnection:Disconnect()
        end
    end)

    table.insert(toyRemoteEspConnections, toyRemoteConnection)
end

local function removeToyRemoteESP()
    for _, toyRemoteConnection in pairs(toyRemoteEspConnections) do
        toyRemoteConnection:Disconnect()
    end
    toyRemoteEspConnections = {}

    for _, item in pairs(workspace:GetDescendants()) do
        if item.Name == "ToyRemote1" and item.Parent.Name == "ToyRemote" then
            local toyRemoteHighlight = item:FindFirstChildOfClass("Highlight")
            if toyRemoteHighlight then
                toyRemoteHighlight:Destroy()
            end
        end
    end
end

Tab4:AddToggle({
    Name = "Toy Remote",
    Default = false,
    Callback = function(Value)
        toyRemoteEspEnabled = Value
        if toyRemoteEspEnabled then
            for _, item in pairs(workspace:GetDescendants()) do
                if item.Name == "ToyRemote1" and item.Parent.Name == "ToyRemote" then
                    createToyRemoteESP(item)
                end
            end
            setupSoundListener(function()
                removeToyRemoteESP()
                for _, item in pairs(workspace:GetDescendants()) do
                    if item.Name == "ToyRemote1" and item.Parent.Name == "ToyRemote" then
                        createToyRemoteESP(item)
                    end
                end
            end)
        else
            removeToyRemoteESP()
        end
    end
})

OrionLib:Init()
